/* tslint:disable */
/* eslint-disable */
/**
 * OSIDB API
 * REST API autogenerated docs for the OSIDB and its components
 *
 * The version of the OpenAPI document: 4.12.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type {
  ExploitsApiV1CollectUpdate200Response,
  ExploitsApiV1CveMapRetrieve200Response,
  ExploitsApiV1EpssList200Response,
  ExploitsApiV1FlawDataList200Response,
  ExploitsApiV1ReportDataList200Response,
  ExploitsApiV1ReportDateRetrieve200Response,
  ExploitsApiV1ReportExplanationsRetrieve200Response,
  ExploitsApiV1ReportPendingRetrieve200Response,
  ExploitsApiV1StatusRetrieve200Response,
  ExploitsApiV1SupportedProductsList200Response,
} from '../models';

/**
* API endpoint for re-collecting exploit data.  **NOTE:** Currently for CISA data only, which is very small and collection is fast.
* @Path /exploits/api/v1/collect
* @Method PUT
*/
/**
* API endpoint for getting simple exploits information mapped to impacted CVEs.  The Insights Vulnerability application needs this format.  Format of results: ``` {   \"page_size\": <Number of CVEs on the page>,   \"cves\": {     \"CVE-2222-0001\": [<List of exploits>],     \"CVE-2222-0002\": [<List of exploits>],     ...   }, } ```
* @Path /exploits/api/v1/cve_map
* @Method GET
*/
/**
* API endpoint for getting list of Red Hat relevant CVEs with their EPSS score.
* @Path /exploits/api/v1/epss
* @Method GET
*/
export type exploitsApiV1EpssList = {
    limit: number;
    offset: number;
}
/**
* Flaw, affect, and tracker data for Exploits
* @Path /exploits/api/v1/flaw_data
* @Method GET
*/
export type exploitsApiV1FlawDataList = {
    limit: number;
    offset: number;
}
/**
* Export only the data required to generate the exploits report
* @Path /exploits/api/v1/report_data
* @Method GET
*/
export type exploitsApiV1ReportDataList = {
    limit: number;
    offset: number;
}
/**
* API endpoint for getting date based report for Incident Response.  Format of results: ``` {   \"cutoff_date\": <Date>,   \"evaluated_cves\": <Number of new CVEs with exploits>,   \"action_required\": [<List of affects requiring action>],   \"no_action\": [<List of CVEs not requiring action with reason>],   \"not_relevant\": [<List of CVEs which are not in the database with reason>], } ```  **NOTE:** No pagination is performed on this endpoint as data is limited by date and is expected           to be fairly small. Also, because data is broken into three categories it is not           exactly obvious how to create pages.
* @Path /exploits/api/v1/report/date/{date}
* @Method GET
*/
export type exploitsApiV1ReportDateRetrieve = {
}
/**
* API endpoint for getting a report of all CVEs with exploit and their status for Incident Response.  Format of results: ``` {    \"page_size\": <Number of CVEs on the page>,    \"explanations\": [<List of CVEs with exploit together with current status explanation>], } ```
* @Path /exploits/api/v1/report/explanations
* @Method GET
*/
/**
* API endpoint for getting a report of pending actions for Incident Response.  Format of results: ``` {   \"pending_actions\": [<List of affects requiring action>],   \"pending_actions_count\": <Number of affects requiring action>, } ```  **NOTE:** No pagination is performed on this endpoint as it is expected that the size of           the list of pending actions will be mostly stable. Also, the paging cannot be done on           the query level, as additional analysis of every exploit is required before a decision           to include it in this report is done.
* @Path /exploits/api/v1/report/pending
* @Method GET
*/
/**
* API endpoint for getting basic information about exploits in the database.  **NOTE:** Everyone is allowed to see basic information.
* @Path /exploits/api/v1/status
* @Method GET
*/
/**
* API endpoint for getting a list of all supported products.
* @Path /exploits/api/v1/supported-products
* @Method GET
*/
export type exploitsApiV1SupportedProductsList = {
    limit: number;
    offset: number;
}

